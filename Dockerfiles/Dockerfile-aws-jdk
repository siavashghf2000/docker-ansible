ARG VERSION

# --------------------------------------------------------------------------------------------------
# Builder Image
# --------------------------------------------------------------------------------------------------
FROM alpine:3.13 as builder

ARG MAVEN_VERSION=3.6.3
ARG USER_HOME_DIR="/root"
ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries

# Required tools for building Python packages
RUN set -eux \
	&& apk add --no-cache \
		bc \
		curl \
		gcc \
		git \
		libffi-dev \
		make \
		musl-dev \
		openssl-dev \
		python3 \
		python3-dev \
                py3-pip \
                openjdk11

# Python packages (copied to final image)
RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile \
		awscli \
		botocore \
		boto \
		boto3 \
	&& aws --version 2>&1 | grep -E '^aws-cli/[.0-9]+' \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

# aws-iam-authemticator (copied to final image)
RUN set -eux \
	&& git clone https://github.com/kubernetes-sigs/aws-iam-authenticator /tmp/aws-iam-authenticator \
	&& cd /tmp/aws-iam-authenticator \
	&& IAM_AUTH_VERSION="$( git tag --sort=-creatordate \
		| grep -E 'v[0-9]+\.[0-9]+\.[0-9]+$' \
		| head -1 \
		| sed 's/^v//g' \
	)" \
	&& curl -sS -L -b cookies.txt -c cookies.txt \
		-o /usr/bin/aws-iam-authenticator \
		-H "User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.89 Safari/537.36" \
		"https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v${IAM_AUTH_VERSION}/aws-iam-authenticator_${IAM_AUTH_VERSION}_linux_amd64" \
	&& chmod +x /usr/bin/aws-iam-authenticator \
	&& aws-iam-authenticator version | grep "\"${IAM_AUTH_VERSION}\"" \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
  && mkdir -p /usr/share/maven /usr/share/maven/ref \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  && rm -f /tmp/apache-maven.tar.gz \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

COPY settings-docker.xml /usr/share/maven/ref/

# --------------------------------------------------------------------------------------------------
# Final Image
# --------------------------------------------------------------------------------------------------
# FROM cytopia/ansible:${VERSION}-tools as production
FROM siavashghf2000/masimo:ansible-tools as production
ARG VERSION
ARG USER_HOME_DIR="/root"
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
#LABEL "org.opencontainers.image.created"=""
#LABEL "org.opencontainers.image.version"=""
#LABEL "org.opencontainers.image.revision"=""
LABEL "maintainer"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.authors"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.vendor"="cytopia"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.url"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.documentation"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.source"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.ref.name"="Ansible ${VERSION} aws"
LABEL "org.opencontainers.image.title"="Ansible ${VERSION} aws"
LABEL "org.opencontainers.image.description"="Ansible ${VERSION} aws"

ENV JAVA_HOME /usr/lib/jvm/default-jvm
ENV PATH=$PATH:/usr/lib/jvm/default-jvm/bin
ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

COPY --from=builder /usr/lib/python3.8/site-packages/ /usr/lib/python3.8/site-packages/
COPY --from=builder /usr/bin/aws /usr/bin/aws
COPY --from=builder /usr/bin/aws-iam-authenticator /usr/bin/aws-iam-authenticator
COPY --from=builder /usr/share/maven /usr/share/maven
COPY --from=builder /usr/bin/mvn /usr/bin/mvn
COPY --from=builder /usr/lib/jvm /usr/lib/jvm

WORKDIR /data
COPY data/docker-mvn-entrypoint.sh /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["/bin/bash"]
